{
  "metadata": {
    "source": "rest_api",
    "endpoint": "/api/v1/aspects/datajobs",
    "timestamp": "2024-01-15T11:45:00Z",
    "request_id": "req_67890"
  },
  "entity_type": "DataJob",
  "key": {
    "flow_urn": "urn:li:dataFlow:(airflow,user_analytics_pipeline,PROD)",
    "job_name": "process_user_profiles"
  },
  "aspects": {
    "dataJobInfo": {
      "name": "process_user_profiles",
      "namespace": "user_analytics",
      "versionId": "2.1.0",
      "integration": "airflow",
      "processingType": "BATCH",
      "jobType": "TRANSFORM",
      "description": "Process and transform user profile data for analytics"
    },
    "documentation": {
      "description": "Data processing job for user profile analytics",
      "contentType": "text/markdown",
      "content": "# User Profile Processing Job\n\nThis job processes user profile data for analytics purposes.\n\n## Purpose\n- Transform raw user data into analytics-ready format\n- Apply data quality checks and validations\n- Generate aggregated metrics\n\n## Dependencies\n- Raw user profiles dataset\n- User preferences dataset\n- Analytics configuration\n\n## Output\n- Processed user profiles\n- User analytics metrics\n- Data quality reports"
    },
    "sourceCodeLocation": {
      "type": "GITHUB",
      "url": "https://github.com/company/analytics-pipelines",
      "repo": "analytics-pipelines",
      "branch": "main",
      "path": "jobs/user_analytics/process_user_profiles.py"
    },
    "sourceCode": {
      "language": "python",
      "snippet": "def process_user_profiles():\n    # Load user profiles\n    df = load_user_profiles()\n    \n    # Apply transformations\n    df = apply_transformations(df)\n    \n    # Save processed data\n    save_processed_data(df)",
      "fullCode": "import pandas as pd\nimport numpy as np\nfrom datetime import datetime\n\ndef load_user_profiles():\n    # Load from source\n    df = pd.read_sql('SELECT * FROM user_profiles', engine)\n    return df\n\ndef apply_transformations(df):\n    # Clean data\n    df = df.dropna(subset=['email'])\n    \n    # Add computed fields\n    df['age'] = calculate_age(df['date_of_birth'])\n    df['full_name'] = df['first_name'] + ' ' + df['last_name']\n    \n    # Filter active users\n    df = df[df['is_active'] == True]\n    \n    return df\n\ndef save_processed_data(df):\n    # Save to analytics database\n    df.to_sql('processed_user_profiles', engine, if_exists='replace')\n\ndef process_user_profiles():\n    df = load_user_profiles()\n    df = apply_transformations(df)\n    save_processed_data(df)\n    \n    print(f'Processed {len(df)} user profiles')"
    },
    "environmentProperties": {
      "env": "PROD",
      "config": {
        "database_url": "postgresql://prod_user:prod_pass@prod_host/prod_db",
        "batch_size": 50000,
        "timeout": 7200,
        "memory_limit": "8GB",
        "cpu_limit": "4 cores"
      }
    },
    "ownership": {
      "owners": [
        {
          "owner": "analytics.engineer",
          "type": "DEVELOPER",
          "source": "MANUAL"
        },
        {
          "owner": "analytics_team",
          "type": "DELEGATE",
          "source": "MANUAL"
        }
      ],
      "lastModified": {
        "actor": "analytics.engineer",
        "time": "2024-01-15T11:45:00Z"
      }
    },
    "dataJobInputOutput": {
      "inputs": [
        {
          "entity_type": "Dataset",
          "key": {
            "platform": "postgresql",
            "name": "user_profiles",
            "env": "PROD"
          }
        },
        {
          "entity_type": "Dataset",
          "key": {
            "platform": "postgresql",
            "name": "user_preferences",
            "env": "PROD"
          }
        }
      ],
      "outputs": [
        {
          "entity_type": "Dataset",
          "key": {
            "platform": "postgresql",
            "name": "processed_user_profiles",
            "env": "PROD"
          }
        },
        {
          "entity_type": "Dataset",
          "key": {
            "platform": "postgresql",
            "name": "user_analytics_metrics",
            "env": "PROD"
          }
        }
      ]
    },
    "dataJobRun": {
      "eventType": "START",
      "runId": "run_67890",
      "parent": {
        "entity_type": "DataFlow",
        "key": {
          "platform": "airflow",
          "name": "user_analytics_pipeline",
          "env": "PROD"
        }
      },
      "status": "RUNNING",
      "startTime": "2024-01-15T11:45:00Z",
      "endTime": null
    }
  },
  "relationships": [
    {
      "type": "CONSUMES",
      "target": {
        "entity_type": "Dataset",
        "key": {
          "platform": "postgresql",
          "name": "user_profiles",
          "env": "PROD"
        }
      },
      "direction": "outgoing"
    },
    {
      "type": "CONSUMES",
      "target": {
        "entity_type": "Dataset",
        "key": {
          "platform": "postgresql",
          "name": "user_preferences",
          "env": "PROD"
        }
      },
      "direction": "outgoing"
    },
    {
      "type": "PRODUCES",
      "target": {
        "entity_type": "Dataset",
        "key": {
          "platform": "postgresql",
          "name": "processed_user_profiles",
          "env": "PROD"
        }
      },
      "direction": "outgoing"
    },
    {
      "type": "PRODUCES",
      "target": {
        "entity_type": "Dataset",
        "key": {
          "platform": "postgresql",
          "name": "user_analytics_metrics",
          "env": "PROD"
        }
      },
      "direction": "outgoing"
    },
    {
      "type": "OWNS",
      "target": {
        "entity_type": "CorpUser",
        "key": {
          "username": "analytics.engineer"
        }
      },
      "direction": "incoming",
      "properties": {
        "via": "DEVELOPMENT"
      }
    },
    {
      "type": "OWNS",
      "target": {
        "entity_type": "CorpGroup",
        "key": {
          "name": "analytics_team"
        }
      },
      "direction": "incoming",
      "properties": {
        "via": "TEAM_OWNERSHIP"
      }
    }
  ]
}
