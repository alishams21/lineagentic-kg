# Enhanced Registry with URN patterns, relationships, and generation rules
metadata:
  version: "1.0"
  description: "Enhanced registry for dynamic Neo4jMetadataWriter generation"
  urn_prefix: "urn:li"

# URN Generation Patterns
urn_patterns:
  dataPlatform:
    template: "{prefix}:dataPlatform:{platform}"
    parameters: ["platform"]
    sanitize: ["platform"]
  
  dataset:
    template: "{prefix}:dataset:({data_platform_urn},{name},{env})"
    parameters: ["platform", "name", "env"]
    defaults: {"env": "PROD"}
    dependencies: ["dataPlatform"]
    sanitize: ["name"]
  
  dataFlow:
    template: "{prefix}:dataFlow:({platform},{flow_id},{env})"
    parameters: ["platform", "flow_id", "env"]
    defaults: {"env": "PROD"}
    sanitize: ["platform", "flow_id"]
  
  dataJob:
    template: "{prefix}:dataJob:({flow_urn},{job_name})"
    parameters: ["flow_urn", "job_name"]
    sanitize: ["job_name"]
  
  corpUser:
    template: "{prefix}:corpuser:{username}"
    parameters: ["username"]
    sanitize: ["username"]
    transformations: {"username": "email_to_username"}
  
  corpGroup:
    template: "{prefix}:corpGroup:{groupname}"
    parameters: ["groupname"]
    sanitize: ["groupname"]
  
  tag:
    template: "{prefix}:tag:{key}{value_suffix}"
    parameters: ["key", "value"]
    sanitize: ["key", "value"]
    conditional_logic: "value_suffix"
    conditional_rules:
      value_suffix:
        when_value_present: "={value}"
        when_value_absent: ""
  
  column:
    template: "{dataset_urn}#{field_path}"
    parameters: ["dataset_urn", "field_path"]
    sanitize: ["field_path"]

# Aspect Definitions
aspects:
  corpUserInfo:
    type: versioned
    properties:
      - active
      - displayName
      - email
      - title
      - department
      - managerUrn
      - skills
    required: ["active", "displayName", "email"]
    defaults:
      active: true
  
  corpGroupInfo:
    type: versioned
    properties:
      - name
      - description
      - email
      - slackChannel
    required: ["name"]
  
  datasetProperties:
    type: versioned
    properties:
      - description
      - customProperties
      - tags
      - externalUrl
    required: ["description"]
  
  schemaMetadata:
    type: versioned
    properties:
      - schemaName
      - platform
      - version
      - fields
      - primaryKeys
      - foreignKeys
    required: ["schemaName", "platform", "fields"]
  
  ownership:
    type: versioned
    properties:
      - owners
      - lastModified
    required: ["owners"]
  
  globalTags:
    type: versioned
    properties:
      - tags
    required: ["tags"]
  
  datasetProfile:
    type: timeseries
    properties:
      - rowCount
      - columnCount
      - sizeInBytes
      - lastModified
      - partitionCount
    required: ["rowCount", "columnCount"]
  
  dataFlowInfo:
    type: versioned
    properties:
      - name
      - namespace
      - description
      - version
    required: ["name", "namespace"]
  
  dataJobInfo:
    type: versioned
    properties:
      - name
      - namespace
      - versionId
      - integration
      - processingType
      - jobType
      - description
    required: ["name", "namespace"]
  
  documentation:
    type: versioned
    properties:
      - description
      - contentType
      - content
    required: ["description"]
  
  sourceCodeLocation:
    type: versioned
    properties:
      - type
      - url
      - repo
      - branch
      - path
    required: ["type", "url"]
  
  sourceCode:
    type: versioned
    properties:
      - language
      - snippet
      - fullCode
    required: ["language"]
  
  environmentProperties:
    type: versioned
    properties:
      - env
      - config
    required: ["env"]
  
  dataJobInputOutput:
    type: versioned
    properties:
      - inputs
      - outputs
    required: ["inputs", "outputs"]
  
  dataJobRun:
    type: timeseries
    properties:
      - eventType
      - runId
      - parent
      - status
      - startTime
      - endTime
    required: ["eventType", "runId"]
  
  columnProperties:
    type: versioned
    properties:
      - description
      - dataType
      - nullable
      - defaultValue
    required: ["dataType"]
  
  transformation:
    type: versioned
    properties:
      - inputColumns
      - steps
      - notes
      - sourceDataset
      - targetDataset
      - transformationType
    required: ["inputColumns", "transformationType"]
    defaults:
      sourceDataset: null
      targetDataset: null


# Entity Definitions
entities:
  Dataset:
    key: datasetKey
    urn_generator: dataset
    properties:
      - platform
      - name
      - env
      - versionId
    aspects:
      datasetProperties: versioned
      schemaMetadata: versioned
      ownership: versioned
      globalTags: versioned
      datasetProfile: timeseries
    relationships:
      - type: HAS_COLUMN
        target: Column
        direction: outgoing
      - type: TAGGED
        target: Tag
        direction: outgoing
        properties: ["source"]
      - type: UPSTREAM_OF
        target: Dataset
        direction: outgoing
        properties: ["via"]
      - type: OWNS
        target: CorpUser
        direction: incoming
        properties: ["via"]
      - type: OWNS
        target: CorpGroup
        direction: incoming
        properties: ["via"]

  DataFlow:
    key: dataFlowKey
    urn_generator: dataFlow
    properties:
      - platform
      - flow_id
      - namespace
      - name
      - env
    aspects:
      dataFlowInfo: versioned
    relationships:
      - type: HAS_JOB
        target: DataJob
        direction: outgoing

  DataJob:
    key: dataJobKey
    urn_generator: dataJob
    properties:
      - flow_urn
      - job_name
    aspects:
      dataJobInfo: versioned
      documentation: versioned
      sourceCodeLocation: versioned
      sourceCode: versioned
      environmentProperties: versioned
      ownership: versioned
      dataJobInputOutput: versioned
      dataJobRun: timeseries
    relationships:
      - type: CONSUMES
        target: Dataset
        direction: outgoing
      - type: PRODUCES
        target: Dataset
        direction: outgoing
      - type: OWNS
        target: CorpUser
        direction: incoming
        properties: ["via"]
      - type: OWNS
        target: CorpGroup
        direction: incoming
        properties: ["via"]

  CorpUser:
    key: corpUserKey
    urn_generator: corpUser
    properties:
      - username
    aspects:
      corpUserInfo: versioned
      ownership: versioned
    relationships:
      - type: OWNS
        target: Dataset
        direction: outgoing
        properties: ["via"]
      - type: OWNS
        target: DataJob
        direction: outgoing
        properties: ["via"]

  CorpGroup:
    key: corpGroupKey
    urn_generator: corpGroup
    properties:
      - name
    aspects:
      corpGroupInfo: versioned
      ownership: versioned
    relationships:
      - type: OWNS
        target: Dataset
        direction: outgoing
        properties: ["via"]
      - type: OWNS
        target: DataJob
        direction: outgoing
        properties: ["via"]

  Tag:
    key: tagKey
    urn_generator: tag
    properties:
      - key
      - value
    aspects: {}
    relationships:
      - type: TAGGED
        target: Dataset
        direction: incoming

  Column:
    key: columnKey
    urn_generator: column
    properties:
      - dataset_urn
      - field_path
    aspects:
      columnProperties: versioned
      transformation: versioned
    relationships:
      - type: DERIVES_FROM
        target: Column
        direction: outgoing
        properties: ["type", "subtype", "description", "transformation", "source_dataset", "target_dataset"]

# Aspect Types
aspect_types:
  versioned:
    base_class: "Versioned"
    properties: ["id", "name", "version", "kind", "json", "createdAt"]
    query_pattern: "MATCH (e:{entity_label} {{urn:$urn}})-[:HAS_ASPECT {{name:$an}}]->(a:Aspect:Versioned)"
  
  timeseries:
    base_class: "TimeSeries"
    properties: ["id", "name", "ts", "kind", "json", "createdAt"]
    query_pattern: "MATCH (e:{entity_label} {{urn:$urn}})-[:HAS_ASPECT {{name:$an}}]->(a:Aspect:TimeSeries)"
